on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_URI: 541261779827.dkr.ecr.us-east-1.amazonaws.com/linkagebackend
  TASK_DEFINITION_NAME: LinkageTaskDefinition  # Name of your task definition
  NEW_SECURITY_GROUP_ID: sg-05bc3dff8e3341287  # New security group ID

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY_URI:latest .

    - name: Push Docker image to ECR
      run: |
        docker push $ECR_REPOSITORY_URI:latest

    - name: Deregister Existing Task Definitions
      run: |
        # List all revisions of the task definition
        REVISIONS=$(aws ecs list-task-definitions \
          --family-prefix ${{ env.TASK_DEFINITION_NAME }} \
          --region $AWS_REGION \
          --query "taskDefinitionArns[]" --output text)

        # Deregister each revision
        for REVISION in $REVISIONS; do
          aws ecs deregister-task-definition --task-definition $REVISION
        done

    - name: Register Task Definition Revision 1
      run: |
        # Fetch the current task definition
        CURRENT_TASK=$(aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION_NAME }}:1)

        # Update the security group
        UPDATED_TASK=$(echo "$CURRENT_TASK" | jq '
          .taskDefinition |
          del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy) |
          .networkConfiguration.awsvpcConfiguration.securityGroups = ["'${{ env.NEW_SECURITY_GROUP_ID }}"]
        ')

        # Save and register the task definition
        echo "$UPDATED_TASK" > updated-task-def.json
        aws ecs register-task-definition --cli-input-json file://updated-task-def.json

    - name: Update ECS Service to Use Task Definition Revision 1
      run: |
        # Use the specific task definition revision 1
        aws ecs update-service \
          --cluster LinkageCluster \
          --service express-backend-service-v2 \
          --task-definition ${{ env.TASK_DEFINITION_NAME }}:1 \
          --force-new-deployment
